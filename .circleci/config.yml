version: 2
jobs:
  build:
    docker:
      - image: ubuntu:bionic
    environment:
      KYTHE_VERSION: v0.0.32
      KYTHE_CORPUS: github.com/justbuchanan/kythe_bazel_demo

    steps:
      - checkout

      - run: apt-get update

      # install go
      - run: apt-get install -y software-properties-common && add-apt-repository ppa:gophers/archive -y && apt-get update
      - run: apt-get install -y git golang-1.11-go
      - run: echo 'export GOPATH=/go' >> $BASH_ENV
      - run: echo 'export PATH="$GOPATH/bin:/usr/lib/go-1.11/bin:$PATH"' >> $BASH_ENV

      # install bazelisk
      - run: go get -u github.com/bazelbuild/bazelisk

      # build and build deps
      - run: apt-get install -y libeigen3-dev
      - run: bazelisk build //...

      # install kythe
      - run: apt-get install -y wget
      - run: wget -O /tmp/kythe.tar.gz https://github.com/kythe/kythe/releases/download/$KYTHE_VERSION/kythe-$KYTHE_VERSION.tar.gz
      - run: tar --no-same-owner -xvzf /tmp/kythe.tar.gz --directory /opt
      - run: echo 'KYTHE_DIR=/opt/kythe-$KYTHE_VERSION' >> $BASH_ENV

      # re-build with extraction enabled
      - run: bazelisk --bazelrc=$KYTHE_DIR/extractors.bazelrc build --override_repository kythe_release=$KYTHE_DIR //...
      # TODO: handle return code. Extraction should succeed even if not all targets build successfully

      # create and store final kzip
      - run: mkdir -p /workspace
      - run: $KYTHE_DIR/tools/kzip merge --output /workspace/final.kzip $(find bazel-out/*/extra_actions/ -name "*.kzip")
      - run: $KYTHE_DIR/tools/kzip info --input /workspace/final.kzip
      - persist_to_workspace:
          root: /workspace
          paths:
            - final.kzip

      # optional: save kzip to circleci artifacts - it can be downloaded from the web interface
      - store_artifacts:
          path: /workspace/final.kzip
          destination: kythe_demo.kzip


  # use google cloud service account to upload the final kzip to a gcs bucket.
  # Requires the following environment variables:
  # * GCS_PROJECT_ID - gcloud project id
  # * GCS_SERVICE_ACCOUNT_KEY - service account access key (json format)
  upload_kzip:
    docker:
      - image: google/cloud-sdk
    environment:
      KYTHE_CORPUS: github.com/justbuchanan/kythe_bazel_demo
      KYTHE_GCS_BUCKET_PATH: justinbuchanan_kythe_experiments/kzip_dropbox

    steps:
      # authenticate
      - run: |
          echo $GCS_SERVICE_ACCOUNT_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GCS_PROJECT_ID}

      - attach_workspace:
          at: /workspace
      # test if file is accessible
      - run: stat /workspace/final.kzip

      # upload
      - run: gsutil cp /workspace/final.kzip gs://$KYTHE_GCS_BUCKET_PATH/$KYTHE_CORPUS/${CIRCLE_BUILD_NUM}_${CIRCLE_SHA1}.kzip


workflows:
  version: 2
  build_and_upload_kzip:
    jobs:
      - build
      - upload_kzip:
          requires:
            - build
